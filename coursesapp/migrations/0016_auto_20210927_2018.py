# Generated by Django 3.2.7 on 2021-09-27 19:18

from coursesapp.models import AcademicTimeline
from django.db import migrations
from django.contrib.auth.models import Group, Permission
from django.contrib.contenttypes.models import ContentType



def create_group_permissions(apps, schema_editor):
    lecturers, _ = Group.objects.get_or_create(name='lecturers')
    students, _ = Group.objects.get_or_create(name='students')
    advisers, _ = Group.objects.get_or_create(name='advisers')

    LevelAdviser = apps.get_model("coursesapp", "LevelAdviser")
    content_type = ContentType.objects.get_for_model(LevelAdviser)
    permission = Permission.objects.get(
            codename="is_adviser"
        )
    advisers.permissions.add(permission)

    Student = apps.get_model("coursesapp", "Student")
    content_type = ContentType.objects.get_for_model(Student)
    permission, _ = Permission.objects.get_or_create(
            codename="is_student", name="User is a student", content_type=content_type
        )
    students.permissions.add(permission)

    Lecturer = apps.get_model("coursesapp", "Lecturer")
    content_type = ContentType.objects.get_for_model(Lecturer)
    permission = Permission.objects.get(
            codename="is_lecturer"
        )
    lecturers.permissions.add(permission)







class Migration(migrations.Migration):

    dependencies = [
        ('coursesapp', '0009_merge_20210927_2223'),
    ]

    operations = [

        migrations.RunPython(create_group_permissions)
    ]



# old = AcademicTimeline.objects.all().count()

# # Create user, giver persmission

# content_type = ContentType.objects.get_for_model(AcademicTimeline)
# permission = Permission.objects.create(
#     codename="can_create_tl",
#     name="Can Modify Portal",
#     content_type=content_type,
# )